<!DOCTYPE html>
<html>
  <head>
    <title>Swapi</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <style>

      body {
        margin: 0;
        padding: 0;
        padding-bottom: 350px;
      }

      .container, .container-2 {
        margin: auto;
        margin-top: 50px;
        width: 768px;
      }

      .custom-select select {
        display: none;
      }

      .btn-danger {
        position: relative;
        background-color: red;
        padding: 10px;
        border: none;
        border: solid 2px brown;
      }
      h3 {
        margin: 30px;
      }

      .custom-select {
        position: relative;
        font-family: Arial, Helvetica, sans-serif;
        /* margin-bottom: 350px; */
      }


      .select-selected {
        background-color: dodgerblue;
      }

      .select-selected:after {
        position: absolute;
        content: "";
        top: 14px;
        right: 10px;
        width: 0;
        height: 0;
        border: 6px solid transparent;
        border-color: #fff transparent transparent transparent;
      }

      .select-selected.select-arrow-active:after {
        border-color: transparent transparent #fff transparent;
        top: 7px;
      }

      .select-items div,.select-selected {
        color: #ffffff;
        padding: 8px 16px;
        border: 1px solid transparent;
        border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
        cursor: pointer;
      }

      .select-items {
        position: absolute;
        background-color: DodgerBlue;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99;
      }

      .select-hide {
        display: none;
      }

      .select-items div:hover, .same-as-selected {
        background-color: rgba(0, 0, 0, 0.1);
      }

      .custom-select, .linkA {
        margin-left: 20%;
        text-align: center;
        display: inline-block;
      }

      .linkA a {
        border-radius: 4px;
        text-decoration: none;
        color: #fff;
        font-weight: bold;
        background-color: darkorange;
        padding: 10px;
        margin: 5px;
      }

      @media (max-width: 700px) {
        .custom-select, .linkA {
          margin-left: 15%;
        }
      }

      @media (max-width: 600px) {
        .custom-select, .linkA {
          margin-left: 10%;
        }
      }

      @media (max-width: 520px) {
        .custom-select, .linkA {
          margin-left: 7%;
        }
        .custom-select {
          margin-top: 70px;
        }

        .linkA {
          margin-left: -150px !important;
          position: absolute;
        }
      }

    </style>
  </head>
  <body>
    <div class="container">
      <table>
        <% title.forEach(function(titulo){ %>
        <tr>
          <td><h3 style="color: <%= titulo.color %>"><%= titulo.name %></h3></td>
          <td><button name="<%= titulo.name %>" class="btn btn-danger">Delete</button></td>
        </tr>
        <% }); %>
      </table>
    </div>

    <div class="container-2">
      <div class="custom-select" style="width: 200px;">
        <select>
          <option value="">Select name</option>
          <% title.forEach(function(titulo){ %>
          <option value="<%= titulo.name %>"><%= titulo.name %></option>
          <% }); %>
        </select>
      </div>
      <div class="linkA">
        <a href="#" class="link">Delete Name</a>
      </div>
    </div>

  <script>
    var buttons = document.querySelectorAll(".btn");

    buttons.forEach(element => {
      
      element.addEventListener('click', () => {
        element.parentNode.parentNode.remove();
      });

    });

    let link = document.querySelector('.link');

    link.addEventListener('click', (e) => {

      e.preventDefault();
      
      let elementSelected = document.querySelector('div.custom-select > div.select-selected');
      elementSelected = elementSelected.textContent;

      let option = document.querySelector("div.custom-select > select");
      let setValue = option.value;

      let newOption = document.querySelector(".select-items");
      let count = newOption.children.length;
      newOption = newOption.children;      

      for (let i = 0; i < count; i++) {
        if (newOption[i].innerText !== undefined) {
          if (newOption[i].innerText == setValue) {
            let newDivSelected = document.querySelector(".select-selected");
            newOption[i].remove();  
            newDivSelected.innerText = "Select name";
          }
        } else {
          console.log("Ã© igual a undefined");
          return false;
        }
      }
    });

    var x, i, j, selElmnt, a, b, c;
    
    x = document.getElementsByClassName("custom-select");
    for (i = 0; i < x.length; i++) {
      selElmnt = x[i].getElementsByTagName("select")[0];
      /* For each element, create a new DIV that will act as the selected item: */
      a = document.createElement("DIV");
      a.setAttribute("class", "select-selected");
      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
      x[i].appendChild(a);
      /* For each element, create a new DIV that will contain the option list: */
      b = document.createElement("DIV");
      b.setAttribute("class", "select-items select-hide");
      for (j = 1; j < selElmnt.length; j++) {
        /* For each option in the original select element,
        create a new DIV that will act as an option item: */
        c = document.createElement("DIV");
        c.innerHTML = selElmnt.options[j].innerHTML;
        c.addEventListener("click", function(e) {
            /* When an item is clicked, update the original select box,
            and the selected item: */
            var y, i, k, s, h;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            h = this.parentNode.previousSibling;
            for (i = 0; i < s.length; i++) {
              if (s.options[i].innerHTML == this.innerHTML) {
                s.selectedIndex = i;
                h.innerHTML = this.innerHTML;
                y = this.parentNode.getElementsByClassName("same-as-selected");
                for (k = 0; k < y.length; k++) {
                  y[k].removeAttribute("class");
                }
                this.setAttribute("class", "same-as-selected");
                break;
              }
            }
            h.click();
        });
        b.appendChild(c);
      }
      x[i].appendChild(b);
      a.addEventListener("click", function(e) {
        /* When the select box is clicked, close any other select boxes,
        and open/close the current select box: */
        e.stopPropagation();
        closeAllSelect(this);
        this.nextSibling.classList.toggle("select-hide");
        this.classList.toggle("select-arrow-active");
      });
    }

    function closeAllSelect(elmnt) {
      /* A function that will close all select boxes in the document,
      except the current select box: */
      var x, y, i, arrNo = [];
      x = document.getElementsByClassName("select-items");
      y = document.getElementsByClassName("select-selected");
      for (i = 0; i < y.length; i++) {
        if (elmnt == y[i]) {
          arrNo.push(i)
        } else {
          y[i].classList.remove("select-arrow-active");
        }
      }
      for (i = 0; i < x.length; i++) {
        if (arrNo.indexOf(i)) {
          x[i].classList.add("select-hide");
        }
      }
    }

    document.addEventListener("click", closeAllSelect);
  
  </script>

  </body>
</html>
